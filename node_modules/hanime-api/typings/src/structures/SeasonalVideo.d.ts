import { Client } from '../Client';
import { PartialVideo as IPartialVideo } from '../util/types';
declare const toOmit: readonly ["description", "is_hard_subtitled", "rating", "poster_url", "cover_url", "brand_id", "duration_in_ms", "is_censored", "monthly_rank", "created_at", "released_at"];
interface SeasonalVideo extends Omit<IPartialVideo, typeof toOmit[number]> {
}
declare class SeasonalVideo {
    readonly client: Client;
    readonly raw: SeasonalVideo;
    /**
     * The video's hanime.tv URL.
     */
    url: string;
    /**
     * The video's poster URL.
     */
    poster: string;
    /**
     * The video's cover URL.
     */
    cover: string;
    /**
     * The video's brand's ID.
     */
    brandID: number;
    /**
     * The video's duration.
     */
    duration: number;
    /** @ignore */
    constructor(client: Client, raw: IPartialVideo);
    /**
     * Fetch full video data.
     */
    fetch(): Promise<import("./Video").Video>;
    /**
     * Fetch the storyboards of this video.
     */
    fetchStoryboards(): Promise<import("./Storyboard").Storyboard[]>;
}
export { SeasonalVideo };
