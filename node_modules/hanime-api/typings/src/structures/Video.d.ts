import { Client } from '../Client';
import { Video as IVideo } from '../util/types';
import { PartialFetchedVideo } from './PartialFetchedVideo';
import { Tag } from './Tag';
import { Franchise } from './Franchise';
import { Brand } from './Brand';
import { Storyboard } from './Storyboard';
import { Server } from './Server';
/**
 * Organized data of a video.
 */
declare class Video {
    /**
     * The client that instantiated this video.
     */
    readonly client: Client;
    /**
     * Raw data of the video returned from the API.
     */
    readonly raw: IVideo;
    /**
     * Data about the video.
     */
    data: PartialFetchedVideo;
    /**
     * The video's tags.
     */
    tags: Tag[];
    /**
     * The video's franchise.
     */
    franchise: Franchise;
    /**
     * The video's storyboards.
     */
    storyboards: Storyboard[];
    /**
     * The video's brand.
     */
    brand: Brand;
    /**
     * The next video based on this video's ID.
     */
    nextVideo: PartialFetchedVideo;
    /**
     * A random video.
     */
    nextRandomVideo: PartialFetchedVideo;
    /**
     * The video's streaming data.
     */
    manifest: {
        servers: Server[];
    };
    /** @ignore */
    constructor(client: Client, raw: IVideo);
}
export { Video };
