import constants from './constants';
export declare type TagName = (typeof constants.TAGS)[number];
export declare type SearchOrderType = 'created_at_unix' | 'views' | 'likes' | 'released_at_unix' | 'title_sortable';
export declare type SeasonOrderType = 'created_at' | 'views' | 'likes' | 'released_at' | 'name';
export interface SearchOptions {
    tags?: TagName[];
    tagMode?: 'and' | 'or';
    brands?: string[];
    blacklist?: TagName[];
    orderBy?: SearchOrderType;
    ordering?: 'asc' | 'desc';
    page?: number;
}
export interface SeasonOptions {
    orderBy?: SeasonOrderType;
    ordering?: 'asc' | 'desc';
    from?: string | number | Date;
    to?: string | number | Date;
    page?: number;
}
export interface SearchResponse {
    page: number;
    nbPages: number;
    nbHits: number;
    hitsPerPage: number;
    hits: string;
}
export interface BrowseResponse {
    hentai_tags: Tag[];
    brands: Brand[];
}
export interface PartialVideo {
    id: number;
    name: string;
    titles: string[];
    slug: string;
    description: string;
    views: number;
    interests: number;
    poster_url: string;
    cover_url: string;
    brand: string;
    brand_id: number;
    duration_in_ms: number;
    is_censored: boolean;
    rating: number;
    likes: number;
    dislikes: number;
    downloads: number;
    monthly_rank: number;
    tags: TagName[];
    created_at: number;
    released_at: number;
}
export interface Title {
    lang: string;
    kind: 'official' | 'main' | 'syn';
    title: string;
}
export interface PartialTag {
    id: number;
    text: TagName;
}
export interface Tag extends PartialTag {
    count: number;
    description: string;
    wide_image_url: string;
    tall_image_url: string;
}
export interface Franchise {
    id: number;
    name: string;
    slug: string;
    title: string;
}
export interface Storyboard {
    id: number;
    num_total_storyboards: number;
    sequence: number;
    url: string;
    frame_width: number;
    frame_height: number;
    num_total_frames: number;
    num_horizontal_frames: number;
    num_vertical_frames: number;
}
export interface Brand {
    id: number;
    title: string;
    slug: string;
    website_url: string | null;
    logo_url: string | null;
    email: string | null;
    count: number;
}
export interface PartialFetchedVideo extends Omit<PartialVideo, 'titles' | 'description'> {
    description?: string;
    is_visible?: boolean;
    is_hard_subtitled: boolean;
    created_at_unix: number;
    released_at_unix: number;
    is_banned_in?: string;
    preview_url: null;
    primary_color: null;
    hentai_tags: PartialTag[];
    titles: Title[];
}
export interface Video {
    hentai_video: PartialFetchedVideo;
    hentai_tags: Tag[];
    hentai_franchise: Franchise;
    hentai_franchise_hentai_videos: PartialFetchedVideo[];
    hentai_video_storyboards: Storyboard[];
    brand: Brand;
    next_hentai_video: PartialFetchedVideo;
    next_random_hentai_video: PartialFetchedVideo;
    videos_manifest: {
        servers: Server[];
    };
}
export interface Server {
    asia_rating: number;
    eu_rating: number;
    id: number;
    is_permanent: boolean;
    na_rating: number;
    name: string;
    sequence: number;
    slug: string;
    streams: {
        compatibility: string;
        duration_in_ms: number;
        extension: string;
        filename: string;
        filesize_mbs: number;
        height: string;
        host_id: number;
        hv_id: number;
        id: number;
        is_downloadable: boolean;
        is_guest_allowed: boolean;
        is_member_allowed: boolean;
        is_premium_allowed: boolean;
        kind: string;
        mime_type: string;
        server_id: number;
        server_sequence: number;
        slug: string;
        video_stream_group_id: string;
        width: number;
        url?: string;
        sub_domain?: string;
    }[];
}
